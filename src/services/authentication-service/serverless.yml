service: serverless-ecommerce-api-authentication-service
frameworkVersion: '3'
plugins:
  - serverless-esbuild

provider:
  name: aws
  runtime: nodejs20.x
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    NODE_OPTIONS: '--enable-source-maps --stack-trace-limit=1000'
    TABLE_NAME: 'BASE'
    user_pool_id: us-east-1_I0lLBUENI
    client_id: 3700nibvr6at50u2dknjlatvj6
  # iamRoleStatements:
  #   - Effect: Allow
  #     Action:
  #       - cognito-idp:AdminInitiateAuth
  #       - cognito-idp:AdminCreateUser
  #       - cognito-idp:AdminSetUserPassword

functions:
  login:
    handler: ./src/login.main
    events:
      - http:
          path: user/login
          method: post

  signup:
    handler: ./src/signup.main
    events:
      - http:
          path: user/signup
          method: post


package:
  individually: false

resources:
  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: serverless-auth-pool
        Schema:
          - Name: email
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy:
            MinimumLength: 6
        AutoVerifiedAttributes: ["email"]

    UserClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: client
        GenerateSecret: false
        UserPoolId: us-east-1_I0lLBUENI
        # ExplicitAuthFlows:
        #   - "ADMIN_NO_SRP_AUTH"

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - 'aws-sdk'
    target: node14
    define:
      'require.resolve': undefined
    platform: node
    concurrency: 10
